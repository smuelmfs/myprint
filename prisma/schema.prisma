//
// ──────────────────────────────────────────────────────────────
// SCHEMA PRISMA - SISTEMA DE CÁLCULO DE PRODUÇÃO GRÁFICA
// Samuel Messias Ferreira de Souza
// Baseado no arquivo “CÁLCULO DE PRODUÇÃO 2024.xlsx”
// ──────────────────────────────────────────────────────────────
//

// -----------------------------
// CONFIGURAÇÕES GERAIS DO PRISMA
// -----------------------------
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//
// ──────────────────────────────────────────────────────────────
// ENUMS
// ──────────────────────────────────────────────────────────────
//

enum Status {
  ATIVO
  INATIVO
}

//
// ──────────────────────────────────────────────────────────────
// TABELAS PRINCIPAIS
// ──────────────────────────────────────────────────────────────
//

// -----------------------------
// CATEGORIA
// -----------------------------
model Categoria {
  id             Int        @id @default(autoincrement())
  nome           String
  slug           String?    @unique
  tipo           String     // "produto" | "extra" | "geral"
  status         Status     @default(ATIVO)
  ordem          Int?       // para organizar visualmente no painel
  produtos       Produto[]
  extras         Extra[]
  criadoEm       DateTime   @default(now())
  atualizadoEm   DateTime   @updatedAt
}

// -----------------------------
// UNIDADE DE MEDIDA
// -----------------------------
model Unidade {
  id             Int        @id @default(autoincrement())
  nome           String     // Ex: "metro quadrado"
  sigla          String?    // Ex: "m²"
  status         Status     @default(ATIVO)
  produtos       Produto[]  @relation("ProdutoUnidade")
  extras         Extra[]    @relation("ExtraUnidade")
  criadoEm       DateTime   @default(now())
  atualizadoEm   DateTime   @updatedAt
}

// -----------------------------
// PRODUTO
// -----------------------------
model Produto {
  id               Int        @id @default(autoincrement())
  nome             String
  referencia       String
  descricao        String?
  categoriaId      Int
  categoria        Categoria  @relation(fields: [categoriaId], references: [id])
  tipoProduto      String     // Ex: "cartao_visita", "catalogo", "vinil"
  unidadeId        Int
  unidade          Unidade    @relation("ProdutoUnidade", fields: [unidadeId], references: [id])

  // Campos econômicos
  custoBase        Float
  margemPadrao     Float
  status           Status     @default(ATIVO)

  // Características técnicas principais
  corTipo          String?    // K, CMYK, etc.
  formato          String?    // A4, A3, Banner...
  paginas          Int?       // Para brochuras/catálogos
  gramagem         Int?       // Para papéis
  tipoPapel        String?    // Couché, Offset, etc.
  acabamento       String?    // Brilho, Fosco, etc.
  largura          Float?     // Para banners/lonas
  altura           Float?     // Para banners/lonas
  material         String?    // Lona, Vinil, etc.
  metodoImpressao  String?    // Serigrafia, Sublimação, etc.
  frenteVerso      String?    // Sim/Não
  possuiFoil       Boolean?   @default(false)
  corteEspecial    Boolean?   @default(false)
  plastificacao    String?    // Brilho, Fosco, etc.
  dobraVinco       String?    // Sim/Não
  espessura        Float?     // Para placas/acrílicos
  suporteMaterial  String?    // Alumínio, PVC, etc.

  // Campos específicos por tipo de produto
  tipoTecido       String?    // Para têxteis
  areaImpressao    String?    // Para têxteis
  materialObjeto   String?    // Para objetos (cerâmica, metal, etc.)
  dimensoes        String?    // Para objetos (10x10x10cm)
  materialSuporte  String?    // Para roll-ups/placas

  extras           ProdutoExtra[]
  criadoEm         DateTime   @default(now())
  atualizadoEm     DateTime   @updatedAt

  @@unique([referencia, status], name: "produto_referencia_ativo")
}

// -----------------------------
// EXTRA (acabamentos e adicionais)
// -----------------------------
model Extra {
  id               Int        @id @default(autoincrement())
  nome             String
  descricao        String?
  categoriaId      Int
  categoria        Categoria  @relation(fields: [categoriaId], references: [id])
  unidadeId        Int
  unidade          Unidade    @relation("ExtraUnidade", fields: [unidadeId], references: [id])
  custo            Float?     // Custo unitário do extra
  status           Status     @default(ATIVO)
  
  // Campos adicionais para configuração de extras
  tipoAplicacao    String?    // Tipo de aplicação do extra
  unidadeCobranca  String?    // Unidade de cobrança
  custoBase        Float?     // Custo base do extra
  margemPadrao     Float?     // Margem padrão
  unidadeTipo      String?    // Tipo de unidade
  unidadeFaturamento String?  // Unidade de faturamento
  tipoAplicacao2   String?    // Tipo de aplicação secundário
  
  produtos         ProdutoExtra[]
  criadoEm         DateTime   @default(now())
  atualizadoEm     DateTime   @updatedAt
}

// -----------------------------
// RELAÇÃO PRODUTO ↔ EXTRA
// -----------------------------
model ProdutoExtra {
  id          Int      @id @default(autoincrement())
  produtoId   Int
  extraId     Int
  custoExtra  Float?    // caso o custo varie conforme o produto
  ativo       Boolean   @default(true)
  produto     Produto   @relation(fields: [produtoId], references: [id])
  extra       Extra     @relation(fields: [extraId], references: [id])
  criadoEm    DateTime  @default(now())
}

//
// ──────────────────────────────────────────────────────────────
// CONFIGURAÇÕES DO SISTEMA
// ──────────────────────────────────────────────────────────────
//

model Configuracao {
  id              Int                 @id @default(autoincrement())
  margemPadrao    Float               @default(100)
  criadoEm        DateTime            @default(now())
  atualizadoEm    DateTime            @updatedAt
  margensCategoria MargemCategoria[]
  minimos          MinimoFaturacao[]
  temposPadrao     TempoPadrao[]
}

// -----------------------------
// MARGEM POR CATEGORIA
// -----------------------------
model MargemCategoria {
  id              Int           @id @default(autoincrement())
  categoria       String        // Ex: "impressao", "vinil", "pvc"
  margem          Float
  configuracaoId  Int
  configuracao    Configuracao  @relation(fields: [configuracaoId], references: [id])
}

// -----------------------------
// MÍNIMO DE FATURAÇÃO
// -----------------------------
model MinimoFaturacao {
  id              Int           @id @default(autoincrement())
  tipo            String        // Ex: "por peça", "por m²"
  valor           Float
  configuracaoId  Int
  configuracao    Configuracao  @relation(fields: [configuracaoId], references: [id])
}

// -----------------------------
// TEMPOS PADRÃO
// -----------------------------
model TempoPadrao {
  id              Int           @id @default(autoincrement())
  operacao        String        // Ex: "impressao offset", "corte vinil"
  tempoMin        Int           // tempo médio em minutos
  valorHora       Float         // custo da hora de operação
  configuracaoId  Int
  configuracao    Configuracao  @relation(fields: [configuracaoId], references: [id])
}
